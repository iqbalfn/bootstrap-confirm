{"version":3,"sources":["../../src/js/util.js","../../src/js/confirm.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","fn","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","Default","title","text","ask","btnConfirm","btnType","btnCancel","DefaultType","Event","MODAL_HIDDEN","SUBMIT_DATA_API","CLICK_DATA_API","ACCEPT_DATA_API","FORM_SUBMIT","A_CLICK","Selector","Confirm","_config","_getConfig","_element","_modal","_isConfirmed","_tagName","tagName","_eventType","_execEvent","_isShown","_addElementListener","el","preventDefault","_showModal","cancel","modal","dispose","window","forEach","htmlElement","off","removeData","dataset","confirm","on","_objectSpread","_this2","tx","appendTo","body","get","remove","_jQueryInterface","relatedTarget","each","data","TypeError","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href')\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  }\n}\n\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap Confirm (v0.0.1): confirm.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'confirm'\nconst VERSION            = '0.0.1'\nconst DATA_KEY           = 'bs.confirm'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n    title       : 'Confirmation',\n    text        : 'Are you sure want to do the action?',\n    ask         : false,\n    btnConfirm  : 'Yes',\n    btnType     : 'primary',\n    btnCancel   : 'Cancel'\n}\n\nconst DefaultType = {\n    title       : 'string',\n    text        : 'string',\n    ask         : 'boolean',\n    btnConfirm  : 'string',\n    btnType     : 'string',\n    btnCancel   : 'string'\n}\n\nconst Event = {\n    MODAL_HIDDEN        : 'hidden.bs.modal',\n    SUBMIT_DATA_API     : `submit${EVENT_KEY}${DATA_API_KEY}`,\n    CLICK_DATA_API      : `click${EVENT_KEY}${DATA_API_KEY}`,\n    ACCEPT_DATA_API     : `click.modal.${EVENT_KEY}${DATA_API_KEY}`,\n\n    FORM_SUBMIT         : 'submit',\n    A_CLICK             : 'click'\n}\n\nconst ClassName = {\n    \n}\n\nconst Selector = {\n    DATA_TOGGLE    : '[data-toggle=\"confirm\"]',\n    MODAL_ACCEPTER : '[data-accept=\"confirm\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Confirm {\n    constructor(element, config) {\n        this._config                = this._getConfig(config)\n        this._element               = element\n        this._modal                 = null\n        this._isConfirmed           = null\n        this._tagName               = element.tagName.toUpperCase()\n        this._eventType             = this._tagName == 'A' ? Event.CLICK_DATA_API : Event.SUBMIT_DATA_API\n        this._execEvent             = this._tagName == 'A' ? Event.A_CLICK : Event.FORM_SUBMIT\n        this._isShown               = false\n\n        this._addElementListener()\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Public\n\n    ask(el, event){\n        if(this._isConfirmed)\n            return;\n        \n        this._isConfirmed = false;\n\n        if(event)\n            event.preventDefault()\n\n        this._showModal()\n    }\n\n    cancel(){\n        this._isConfirmed = false;\n        if(this._modal)\n            $(this._modal).modal('hide')\n    }\n\n    dispose() {\n        [window, this._element]\n            .forEach((htmlElement) => $(htmlElement).off(EVENT_KEY))\n\n        $.removeData(this._element, DATA_KEY)\n\n        this._config                = null\n        this._element               = null\n        this._modal                 = null\n        this._isConfirmed           = null\n        this._tagName               = null\n        this._eventType             = null\n        this._isShown               = null\n    }\n\n    // Private\n\n    _addElementListener(){\n        if(this._tagName === 'FORM' || !this._element.dataset.confirm){\n            $(this._element).on(this._eventType, (event) => {\n                this.ask(this, event)\n            })\n        }\n    }\n\n    _getConfig(config) {\n        config = {\n            ...Default,\n            ...config\n        }\n        Util.typeCheckConfig(NAME, config, DefaultType)\n        return config\n    }\n\n    _showModal(){\n        let tx = `\n            <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">${this._config.title}</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>${this._config.text}</p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${this._config.btnCancel}</button>\n                            <button type=\"button\" class=\"btn btn-${this._config.btnType}\" data-accept=\"confirm\">${this._config.btnConfirm}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `\n\n        this._modal = $(tx).appendTo(document.body).get(0)\n        $(this._modal).on(Event.MODAL_HIDDEN, () => {\n            this._isConfirmed = false;\n            $(this._modal).remove()\n        })\n\n        $(this._modal).on(Event.ACCEPT_DATA_API, Selector.MODAL_ACCEPTER, () => {\n            this._isConfirmed = true\n            this._element[this._execEvent]()\n            this.cancel()\n        })\n\n        $(this._modal).modal('show')\n    }\n\n    // Static\n\n    static _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n            let data = $(this).data(DATA_KEY)\n            const _config = {\n                ...Default,\n                ...$(this).data(),\n                ...typeof config === 'object' && config ? config : {}\n            }\n\n            if (!data) {\n                data = new Confirm(this, _config)\n                $(this).data(DATA_KEY, data)\n            }\n\n            if (typeof config === 'string') {\n                if (typeof data[config] === 'undefined') {\n                    throw new TypeError(`No method named \"${config}\"`)\n                }\n                data[config](relatedTarget)\n            } else if (_config.ask) {\n                data.ask(relatedTarget)\n            }\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    let data = $(this).data(DATA_KEY)\n    if(!data){\n        let target = this\n\n        const config = $(target).data(DATA_KEY)\n            ? 'ask' : {\n                ...$(target).data(),\n                ...$(this).data(),\n                ...{ask:true}\n            }\n        event.preventDefault()\n        Confirm._jQueryInterface.call($(target), config, this)\n    }else{\n        data.ask(this, event)\n    }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Confirm._jQueryInterface\n$.fn[NAME].Constructor = Confirm\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Confirm._jQueryInterface\n}\n\nexport default Confirm"]}